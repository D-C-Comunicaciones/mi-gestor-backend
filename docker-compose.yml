services:
  api:
    build: .
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - APP_REDIS_HOST=${APP_REDIS_HOST}
      - APP_REDIS_PORT=${APP_REDIS_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
    command: >
      sh -c "
      echo 'Esperando a Redis...';
      until nc -z -v -w5 ${APP_REDIS_HOST} ${APP_REDIS_PORT}; do
        echo 'Redis no listo, esperando 2s...';
        sleep 2;
      done;
      echo 'Esperando a RabbitMQ...';
      until nc -z -v -w5 ${RABBITMQ_HOST} ${RABBITMQ_PORT}; do
        echo 'RabbitMQ no listo, esperando 2s...';
        sleep 2;
      done;
      echo 'Esperando a Postgres...';
      until nc -z -v -w5 db-mi-gestor-do-user-16535172-0.e.db.ondigitalocean.com 25060; do
        echo 'Postgres no listo, esperando 2s...';
        sleep 2;
      done;
      echo 'âœ… Todos los servicios listos. Ejecutando API...';
      npx prisma migrate deploy && node dist/main
      "
    restart: unless-stopped
    networks:
      - mi-gestor-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.migestor.rule=Host(`api.dcmigestor.co`)"
      - "traefik.http.routers.migestor.entrypoints=websecure"
      - "traefik.http.routers.migestor.tls.certresolver=myresolver"
      - "traefik.http.services.migestor.loadbalancer.server.port=3000"
networks:
  mi-gestor-network:
    external: true
